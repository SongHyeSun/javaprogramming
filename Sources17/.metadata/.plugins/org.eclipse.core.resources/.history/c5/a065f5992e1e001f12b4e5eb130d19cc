package ch08_ex01;

public interface Lenderable {
	int BORROW = 1;
	int NORMAL = 0;
	abstract void checkOut (String borrower, String date);
	//interface 자체가 abstract인데, 써도 상관없다는 것을 보여주기 위해서
	void checkin ();
}

//extend는 추상화 된 것을 하나도 구현하지 않을 수도 있고 구현할 수도 있다.
//implements는 multiple inheritance가 가능하다
class SeperateVolume implements Lenderable {
	String title;
	String date;
	String borrower;
	int    status;
	
	SeperateVolume(String title) {
		this.title = title;
	}
	//메모리와 title을 초기화 시켜주겠다.
	//void임에도 void라고 할 수 없음
	
	//책 대여 method  --> 상태가 NORMAL일때만
	public void checkOut (String borrower, String date) {
		//1과 0으로 표기해도 되지만, 더 잘 볼 수 있도록 정해준 것 (개발자들끼리)
		if (status !=NORMAL) return;
		this.date = date;
		this.borrower = borrower;
		status = BORROW;
//		BORROW = 1; 안됨
		System.out.println(borrower + "가" + date + "일에" + title + "을 대여했다.");
	}
	
	public void checkin() {
		if (status != BORROW) return;
		System.out.println(borrower + "가" + title +"을 반납했다");
		date = null;
		title = null;
		borrower = null;
		status = NORMAL;
		
	}
}
